(self.webpackChunksite=self.webpackChunksite||[]).push([[7718],{3905:function(e,a,t){"use strict";t.d(a,{Zo:function(){return c},kt:function(){return g}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=n.createContext({}),l=function(e){var a=n.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=l(e.components);return n.createElement(u.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(t),g=r,m=p["".concat(u,".").concat(g)]||p[g]||d[g]||i;return t?n.createElement(m,s(s({ref:a},c),{},{components:t})):n.createElement(m,s({ref:a},c))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=p;var o={};for(var u in a)hasOwnProperty.call(a,u)&&(o[u]=a[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6742:function(e,a,t){"use strict";t.d(a,{Z:function(){return g}});var n=t(9756),r=t(7294),i=t(3727),s=t(2263),o=t(3919),u=t(412),l=(0,r.createContext)({collectLink:function(){}}),c=t(4996),d=t(8780),p=["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"];var g=function(e){var a,t,g=e.isNavLink,m=e.to,f=e.href,k=e.activeClassName,v=e.isActive,b=e["data-noBrokenLinkCheck"],h=e.autoAddBaseUrl,y=void 0===h||h,w=(0,n.Z)(e,p),N=(0,s.Z)().siteConfig,_=N.trailingSlash,D=N.baseUrl,O=(0,c.C)().withBaseUrl,C=(0,r.useContext)(l),x=m||f,E=(0,o.Z)(x),P=null==x?void 0:x.replace("pathname://",""),j=void 0!==P?(t=P,y&&function(e){return e.startsWith("/")}(t)?O(t):t):void 0;j&&E&&(j=(0,d.applyTrailingSlash)(j,{trailingSlash:_,baseUrl:D}));var z,S=(0,r.useRef)(!1),T=g?i.OL:i.rU,Z=u.Z.canUseIntersectionObserver;(0,r.useEffect)((function(){return!Z&&E&&null!=j&&window.docusaurus.prefetch(j),function(){Z&&z&&z.disconnect()}}),[j,Z,E]);var A=null!==(a=null==j?void 0:j.startsWith("#"))&&void 0!==a&&a,L=!j||!E||A;return j&&E&&!A&&!b&&C.collectLink(j),L?r.createElement("a",Object.assign({href:j},x&&!E&&{target:"_blank",rel:"noopener noreferrer"},w)):r.createElement(T,Object.assign({},w,{onMouseEnter:function(){S.current||null==j||(window.docusaurus.preload(j),S.current=!0)},innerRef:function(e){var a,t;Z&&e&&E&&(a=e,t=function(){null!=j&&window.docusaurus.prefetch(j)},(z=new window.IntersectionObserver((function(e){e.forEach((function(e){a===e.target&&(e.isIntersecting||e.intersectionRatio>0)&&(z.unobserve(a),z.disconnect(),t())}))}))).observe(a))},to:j||""},g&&{isActive:v,activeClassName:k}))}},3919:function(e,a,t){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}t.d(a,{b:function(){return n},Z:function(){return r}})},4996:function(e,a,t){"use strict";t.d(a,{C:function(){return i},Z:function(){return s}});var n=t(2263),r=t(3919);function i(){var e=(0,n.Z)().siteConfig,a=(e=void 0===e?{}:e).baseUrl,t=void 0===a?"/":a,i=e.url;return{withBaseUrl:function(e,a){return function(e,a,t,n){var i=void 0===n?{}:n,s=i.forcePrependBaseUrl,o=void 0!==s&&s,u=i.absolute,l=void 0!==u&&u;if(!t)return t;if(t.startsWith("#"))return t;if((0,r.b)(t))return t;if(o)return a+t;var c=t.startsWith(a)?t:a+t.replace(/^\//,"");return l?e+c:c}(i,t,e,a)}}}function s(e,a){return void 0===a&&(a={}),(0,i().withBaseUrl)(e,a)}},9443:function(e,a,t){"use strict";var n=(0,t(7294).createContext)(void 0);a.Z=n},8802:function(e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e,a){var t=a.trailingSlash,n=a.baseUrl;if(e.startsWith("#"))return e;if(void 0===t)return e;var r,i=e.split(/[#?]/)[0],s="/"===i||i===n?i:(r=i,t?function(e){return e.endsWith("/")?e:e+"/"}(r):function(e){return e.endsWith("/")?e.slice(0,-1):e}(r));return e.replace(i,s)}},8780:function(e,a,t){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.uniq=a.applyTrailingSlash=void 0;var r=t(8802);Object.defineProperty(a,"applyTrailingSlash",{enumerable:!0,get:function(){return n(r).default}});var i=t(9964);Object.defineProperty(a,"uniq",{enumerable:!0,get:function(){return n(i).default}})},9964:function(e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=function(e){return Array.from(new Set(e))}},2375:function(e,a,t){"use strict";t.d(a,{T:function(){return p},Z:function(){return g}});var n=t(7294),r=t(6742),i=t(5977),s=t(6010),o=t(9443);var u=function(){var e=(0,n.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l={assemblyscript:"AssemblyScript",c:"C / C++",c3:"C3",d:"D",go:"Go",grain:"Grain",nelua:"Nelua",nim:"Nim",odin:"Odin",penne:"Penne",porth:"Porth",roland:"Roland",rust:"Rust",wat:"WebAssembly Text",zig:"Zig"};function c(e){return"string"==typeof e&&Object.prototype.hasOwnProperty.call(l,e)}function d(e){return(null!=e?e:"").trim().toLowerCase()}function p(e){var a=e.children,t=e.hidden,r=e.className;return n.createElement("div",{hidden:t,className:r},a)}function g(e){var a=n.Children.toArray(e.children),t=a.map((function(e){return e.props.value})),o=function(){var e=u(),a=e.tabGroupChoices,t=e.setTabGroupChoices,r=(0,n.useState)("assemblyscript"),i=r[0],s=r[1],o=function(e){var a=c(e);a?(s(e),t("language",e)):a||console.warn('MultilanguageCode: invalid code-lang received: "'+e+'"')},l=(0,n.useRef)(o);(0,n.useEffect)((function(){l.current=o}));var p="undefined"!=typeof window?window.location.search:"",g=a.language;return(0,n.useLayoutEffect)((function(){var e=d(g);c(e)&&s(e)}),[g]),(0,n.useEffect)((function(){var e=d(new URLSearchParams(p).get("code-lang"));c(e)&&l.current(e)}),[p]),{activeLang:i,updateLang:o}}().activeLang,p=(0,i.k6)(),g=t.includes(o)?o:t.includes("assemblyscript")?"assemblyscript":t[0],m=n.createElement("div",{className:"dropdown dropdown--hoverable dropdown--right"},n.createElement("a",{className:"navbar__link"},l[g]," "),n.createElement("ul",{className:"dropdown__menu text--left"},Object.entries(l).filter((function(e){return t.includes(e[0])})).map((function(e){var a=e[0],t=e[1],i=p.location.pathname+"?code-lang="+a+(p.location.hash||"#no-scroll");return n.createElement("li",{key:a},n.createElement(r.Z,{to:i,replace:!0,className:(0,s.Z)("dropdown__link",a===g&&"dropdown__link--active")},t))}))));return n.createElement("div",null,n.createElement("div",{className:"multilang"},m),n.createElement("div",null,a.map((function(e){return(0,n.cloneElement)(e,{key:e.props.value,hidden:e.props.value!==g})}))))}},364:function(e,a,t){"use strict";t.d(a,{Z:function(){return s}});var n=t(7294),r=t(2375),i={"language-typescript":"assemblyscript","language-javascript":"assemblyscript","language-c":"c","language-c3":"c3","language-cpp":"c","language-d":"d","language-grain":"grain","language-lua":"nelua","language-nelua":"nelua","language-nim":"nim","language-roland":"roland","language-rust":"rust","language-go":"go","language-odin":"odin","language-penne":"penne","language-porth":"porth","language-wasm":"wat","language-zig":"zig"};function s(e){var a=n.Children.toArray(e.children).map((function(e,a){return n.createElement(r.T,{key:a,value:i[e.props.children.props.className]},e)}));return n.createElement(r.Z,null,a)}},2165:function(e,a,t){"use strict";t.r(a),t.d(a,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return g}});var n=t(2122),r=t(9756),i=(t(7294),t(3905)),s=t(364),o=["components"],u={},l="Saving Data",c={unversionedId:"guides/saving-data",id:"guides/saving-data",isDocsHomePage:!1,title:"Saving Data",description:"WASM-4 supports saving up to 1024 raw bytes of data to persist between",source:"@site/docs/guides/saving-data.md",sourceDirName:"guides",slug:"/guides/saving-data",permalink:"/docs/guides/saving-data",editUrl:"https://github.com/aduros/wasm4/edit/main/site/docs/guides/saving-data.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Playing Audio",permalink:"/docs/guides/audio"},next:{title:"Multiplayer",permalink:"/docs/guides/multiplayer"}},d=[{value:"Writing Data to Disk",id:"writing-data-to-disk",children:[]},{value:"Reading Data from Disk",id:"reading-data-from-disk",children:[]}],p={toc:d};function g(e){var a=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"saving-data"},"Saving Data"),(0,i.kt)("p",null,"WASM-4 supports saving up to 1024 raw bytes of data to persist between\nsessions."),(0,i.kt)("p",null,"For the web runtime, the disk is saved into the browser's localStorage and tied\nto the domain. The localStorage key is chosen ",(0,i.kt)("a",{parentName:"p",href:"distribution"},"when bundling")," to\nbe unique and not conflict with other games served from the same domain."),(0,i.kt)("p",null,"For the native runtime, the disk is saved as a file in the same directory as\nthe game."),(0,i.kt)("p",null,"In the case that a game is updated and its disk layout was changed, it's up to\nthe developer to handle it. A simple method would be to prefix the disk data\nwith a version number and when it doesn't match, either reset the current disk\nor migrate it to the new format."),(0,i.kt)("h2",{id:"writing-data-to-disk"},"Writing Data to Disk"),(0,i.kt)("p",null,"To save, use ",(0,i.kt)("inlineCode",{parentName:"p"},"diskw()"),".\nIt takes a source data pointer along with a byte length."),(0,i.kt)("p",null,"For example, to write a 32 bit integer with the value ",(0,i.kt)("inlineCode",{parentName:"p"},"1337")," to disk:"),(0,i.kt)(s.Z,{mdxType:"MultiLanguageCode"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// First we need to store the value somewhere in memory to get a pointer\nconst ptr = memory.data(sizeof<i32>());\nstore<i32>(ptr, 1337);\n\nw4.diskw(ptr, sizeof<i32>());\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int gameData = 1337;\ndiskw(&gameData, sizeof(gameData));\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c3"},"int game_data = 1337;\nw4::diskw(&game_data, $sizeof(game_data));\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-d"},"int gameData = 1337;\nw4.diskw(&gameData, gameData.sizeof);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "unsafe"\n// ...\n\nvar gameData int32 = 1337\nw4.DiskW(unsafe.Pointer(&gameData), unsafe.Sizeof(gameData))\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local game_data: integer = 1337\ndiskw(&game_data, #@decltype(game_data))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-nim"},"var gameData = 1337'i32\ndiscard diskw(addr gameData, uint32 sizeof(gameData))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-odin"},"game_data : i32 = 1337\nw4.diskw(&game_data, size_of(game_data))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-penne"},"var game_data: i32 = 1337;\n// Store the gamedata as little-endian bytes.\nvar bits = game_data as u32;\nvar buffer: [4]u8 = [\n    ((bits >> 24) & 0xFF) as u8,\n    ((bits >> 16) & 0xFF) as u8,\n    ((bits >> 8) & 0xFF) as u8,\n    (bits & 0xFF) as u8,\n];\n// Write the bytes to disk.\ndiskw(buffer, |buffer|);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-porth"},'const data "\\\\39\\\\05\\\\00\\\\00"c end\n\n4 data diskw\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-roland"},"let game_data: i32 = 1337;\ndiskw(&game_data transmute &u8, sizeof$i32());\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"let game_data: i32 = 1337;\n\nunsafe {\n    let game_data_bytes = game_data.to_le_bytes();\n    diskw(game_data_bytes.as_ptr(), core::mem::size_of::<i32>() as u32);\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasm"},';; game data (1337 stored in little-endian format)\n(data (i32.const 0x2000) "\\39\\05\\00\\00")\n\n;; write 4 bytes from address 0x2000\n(call $diskw (i32.const 0x2000) (i32.const 4))\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zig"},"var game_data: i32 = 1337;\n_ = w4.diskw(@ptrCast([*]u8, &game_data), @sizeOf(@TypeOf(game_data)));\n"))),(0,i.kt)("h2",{id:"reading-data-from-disk"},"Reading Data from Disk"),(0,i.kt)("p",null,"Reading is similar, using ",(0,i.kt)("inlineCode",{parentName:"p"},"diskr()"),". It takes a destination pointer along with\na byte length."),(0,i.kt)("p",null,"For example, to read a 32 bit integer from disk:"),(0,i.kt)(s.Z,{mdxType:"MultiLanguageCode"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const ptr = memory.data(sizeof<i32>());\nw4.diskr(ptr, sizeof<i32>());\n\nconst gameData = load<i32>(ptr);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int gameData;\ndiskr(&gameData, sizeof(gameData));\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c3"},"int game_data;\nw4::diskr(&game_data, $sizeof(game_data));\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-d"},"int gameData;\nw4.diskr(&gameData, gameData.sizeof);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "unsafe"\n// ...\n\nvar gameData int32\nw4.DiskR(unsafe.Pointer(&gameData), unsafe.Sizeof(gameData))\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local game_data: integer\ndiskr(&game_data, #@decltype(game_data))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-nim"},"var gameData: int32\ndiscard diskr(addr gameData, uint32 sizeof(gameData))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-odin"},"game_data : i32\nw4.diskr(&game_data, size_of(game_data))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-penne"},"var game_data: i32;\n// Read little-endian bytes from disk.\nvar buffer: [4]u8 = [0, 0, 0, 0];\ndiskr(buffer, |buffer|);\nvar bits = (buffer[0] as u32 << 24) | (buffer[1] as u32 << 16)\n    | (buffer[2] as u32 << 8) | (buffer[3] as u32);\ngame_data = bits as i32;\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-porth"},"memory game_data 4 end\n\n4 game_data diskr\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-roland"},"let game_data: i32 = 0;\ndiskr(&game_data transmute &u8, sizeof$i32());\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"let game_data = unsafe {\n    let mut buffer = [0u8; core::mem::size_of::<i32>()];\n\n    diskr(buffer.as_mut_ptr(), buffer.len() as u32);\n\n    i32::from_le_bytes(buffer)\n};\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-wasm"},";; Read 4 bytes into memory at address 0x2000.\n(call $diskr (i32.const 0x2000) (i32.const 4))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zig"},"var game_data: i32 = undefined;\n_ = w4.diskr(@ptrCast([*]u8, &game_data), @sizeOf(@TypeOf(game_data)));\n"))))}g.isMDXComponent=!0},6010:function(e,a,t){"use strict";function n(e){var a,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(t=n(e[a]))&&(r&&(r+=" "),r+=t);else for(a in e)e[a]&&(r&&(r+=" "),r+=a);return r}function r(){for(var e,a,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(a=n(e))&&(r&&(r+=" "),r+=a);return r}t.d(a,{Z:function(){return r}})}}]);