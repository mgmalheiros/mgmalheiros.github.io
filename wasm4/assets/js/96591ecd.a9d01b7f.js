(self.webpackChunksite=self.webpackChunksite||[]).push([[6829],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return o},kt:function(){return N}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),m=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},o=function(t){var e=m(t.components);return a.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,o=d(t,["components","mdxType","originalType","parentName"]),k=m(n),N=r,s=k["".concat(p,".").concat(N)]||k[N]||u[N]||l;return n?a.createElement(s,i(i({ref:e},o),{},{components:n})):a.createElement(s,i({ref:e},o))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2174:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return o},default:function(){return k}});var a=n(2122),r=n(9756),l=(n(7294),n(3905)),i=["components"],d={},p="Memory Layout",m={unversionedId:"reference/memory",id:"reference/memory",isDocsHomePage:!1,title:"Memory Layout",description:"Endianness",source:"@site/docs/reference/memory.md",sourceDirName:"reference",slug:"/reference/memory",permalink:"/wasm4/docs/reference/memory",editUrl:"https://github.com/aduros/wasm4/edit/main/site/docs/reference/memory.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/wasm4/docs/reference/functions"},next:{title:"Emulator Hotkeys",permalink:"/wasm4/docs/reference/hotkeys"}},o=[{value:"Endianness",id:"endianness",children:[]},{value:"Memory Map",id:"memory-map",children:[]},{value:"PALETTE",id:"palette",children:[]},{value:"DRAW_COLORS",id:"draw_colors",children:[]},{value:"GAMEPADS",id:"gamepads",children:[]},{value:"MOUSE_X",id:"mouse_x",children:[]},{value:"MOUSE_Y",id:"mouse_y",children:[]},{value:"MOUSE_BUTTONS",id:"mouse_buttons",children:[]},{value:"SYSTEM_FLAGS",id:"system_flags",children:[]},{value:"NETPLAY",id:"netplay",children:[]},{value:"FRAMEBUFFER",id:"framebuffer",children:[]}],u={toc:o};function k(t){var e=t.components,n=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"memory-layout"},"Memory Layout"),(0,l.kt)("h3",{id:"endianness"},"Endianness"),(0,l.kt)("p",null,"WebAssembly is, in general, a little-endian system."),(0,l.kt)("h3",{id:"memory-map"},"Memory Map"),(0,l.kt)("p",null,"WASM-4 uses a fixed memory layout of 64 KB."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Address"),(0,l.kt)("th",{parentName:"tr",align:null},"Size (Bytes)"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0000")),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Unused"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0004")),(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#palette"},"PALETTE"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0014")),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#draw_colors"},"DRAW_COLORS"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0016")),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#gamepads"},"GAMEPADS"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$001a")),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#mouse_x"},"MOUSE_X"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$001c")),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#mouse_y"},"MOUSE_Y"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$001e")),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#mouse_buttons"},"MOUSE_BUTTONS"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$001f")),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#system_flags"},"SYSTEM_FLAGS"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0020")),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#netplay"},"NETPLAY"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$0021")),(0,l.kt)("td",{parentName:"tr",align:null},"127"),(0,l.kt)("td",{parentName:"tr",align:null},"Reserved for future use")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$00a0")),(0,l.kt)("td",{parentName:"tr",align:null},"6400"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#framebuffer"},"FRAMEBUFFER"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$19a0")),(0,l.kt)("td",{parentName:"tr",align:null},"58976"),(0,l.kt)("td",{parentName:"tr",align:null},"Available program memory")))),(0,l.kt)("h3",{id:"palette"},"PALETTE"),(0,l.kt)("p",null,"An array of 4 colors, each represented by a 32 bit integer.\nEach color is laid out in memory like this:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Bits"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0 - 7"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue channel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8 - 15"),(0,l.kt)("td",{parentName:"tr",align:null},"Green channel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"16 - 23"),(0,l.kt)("td",{parentName:"tr",align:null},"Red channel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"24 - 31"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Unused"))))),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"PALETTE[0] = 0xff0000; // Set the first palette color to red,\nPALETTE[1] = 0x00ff00; // the second to green,\nPALETTE[2] = 0x0000ff; // the third to blue,\nPALETTE[3] = 0xffffff; // and the fourth to white.\n")),(0,l.kt)("h3",{id:"draw_colors"},"DRAW_COLORS"),(0,l.kt)("p",null,"Indexes into the color palette used by all drawing functions."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Bits"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0 - 3"),(0,l.kt)("td",{parentName:"tr",align:null},"Draw color 1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4 - 7"),(0,l.kt)("td",{parentName:"tr",align:null},"Draw color 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8 - 11"),(0,l.kt)("td",{parentName:"tr",align:null},"Draw color 3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"12 - 15"),(0,l.kt)("td",{parentName:"tr",align:null},"Draw color 4")))),(0,l.kt)("p",null,"Each draw color can be a value between 1 and 4 representing a palette color, or 0 to signify\ntransparency."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"// Set the first draw color to palette color #2, the second to\n// transparent, and the third to palette color #4.\n*DRAW_COLORS = 0x402;\n")),(0,l.kt)("h3",{id:"gamepads"},"GAMEPADS"),(0,l.kt)("p",null,"4 gamepads, with each gamepad represented by a single byte."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Bit"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BUTTON_1")),(0,l.kt)("td",{parentName:"tr",align:null},"X button")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BUTTON_2")),(0,l.kt)("td",{parentName:"tr",align:null},"Z button")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Unused"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Unused"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BUTTON_LEFT")),(0,l.kt)("td",{parentName:"tr",align:null},"D-pad left")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BUTTON_RIGHT")),(0,l.kt)("td",{parentName:"tr",align:null},"D-pad right")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BUTTON_UP")),(0,l.kt)("td",{parentName:"tr",align:null},"D-pad up")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"BUTTON_DOWN")),(0,l.kt)("td",{parentName:"tr",align:null},"D-pad down")))),(0,l.kt)("h3",{id:"mouse_x"},"MOUSE_X"),(0,l.kt)("p",null,"Signed 16 bit integer containing the X position of the mouse. Can contain positions outside of the game window."),(0,l.kt)("h3",{id:"mouse_y"},"MOUSE_Y"),(0,l.kt)("p",null,"Signed 16 bit integer containing the Y position of the mouse. Can contain positions outside of the game window."),(0,l.kt)("h3",{id:"mouse_buttons"},"MOUSE_BUTTONS"),(0,l.kt)("p",null,"Byte containing the mouse buttons state."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Bit"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MOUSE_LEFT")),(0,l.kt)("td",{parentName:"tr",align:null},"Left mouse button")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MOUSE_RIGHT")),(0,l.kt)("td",{parentName:"tr",align:null},"Right mouse button")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MOUSE_MIDDLE")),(0,l.kt)("td",{parentName:"tr",align:null},"Middle mouse button")))),(0,l.kt)("h3",{id:"system_flags"},"SYSTEM_FLAGS"),(0,l.kt)("p",null,"Byte containing flags that modify WASM-4's operation. By default all flags are off."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Bit"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SYSTEM_PRESERVE_FRAMEBUFFER")),(0,l.kt)("td",{parentName:"tr",align:null},"Prevent clearing the framebuffer between frames.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SYSTEM_HIDE_GAMEPAD_OVERLAY")),(0,l.kt)("td",{parentName:"tr",align:null},"Hide the gamepad UI overlay on mobile.")))),(0,l.kt)("h3",{id:"netplay"},"NETPLAY"),(0,l.kt)("p",null,"Byte containing netplay multiplayer state."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Bits"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0 - 1"),(0,l.kt)("td",{parentName:"tr",align:null},"Local player index (0 to 3).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Set if netplay is currently active.")))),(0,l.kt)("h3",{id:"framebuffer"},"FRAMEBUFFER"),(0,l.kt)("p",null,"Array of 160x160 pixels, with each pixel packed into 2 bits (colors 0 to 3)."),(0,l.kt)("p",null,"This region can be freely modified for direct pixel manipulation."))}k.isMDXComponent=!0}}]);