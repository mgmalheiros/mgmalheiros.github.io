(self.webpackChunksite=self.webpackChunksite||[]).push([[9671],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},426:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={slug:"/"},l="Introduction",c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"WASM-4 is a low-level fantasy game console for building small games with",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/docs/",editUrl:"https://github.com/aduros/wasm4/edit/main/site/docs/intro.md",version:"current",frontMatter:{slug:"/"},sidebar:"tutorialSidebar",next:{title:"Setup",permalink:"/docs/getting-started/setup"}},u=[{value:"Why WASM-4?",id:"why-wasm-4",children:[]},{value:"Hardware Specs",id:"hardware-specs",children:[]}],p={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"WASM-4 is a low-level fantasy game console for building small games with\n",(0,o.kt)("a",{parentName:"p",href:"https://webassembly.org/"},"WebAssembly"),". Game cartridges (ROMs) are small, self-contained ",(0,o.kt)("inlineCode",{parentName:"p"},".wasm"),"\nfiles that can be built with any programming language that compiles to WebAssembly."),(0,o.kt)("h2",{id:"why-wasm-4"},"Why WASM-4?"),(0,o.kt)("p",null,"Fantasy consoles force developers to work within tech and design limitations. The idea is that by\nremoving excess and focusing on the essential, it becomes easier to start ",(0,o.kt)("em",{parentName:"p"},"and finish")," developing a\ngame. This is in contrast to large game engines like Unity, which can be daunting and distracting."),(0,o.kt)("p",null,"WASM-4 is designed to be portable, with the goal of running on any device that can execute\nWebAssembly, even outside of the web. The main implementation runs on web browsers, but a native\nimplementation that can run on cheap microcontrollers is planned."),(0,o.kt)("p",null,"Finally, WASM-4 is a fun and easy way to experiment with new programming languages. Ever wanted to\nlearn Rust, Go, or AssemblyScript? As long as it compiles to WebAssembly, you can build games with\nit."),(0,o.kt)("h2",{id:"hardware-specs"},"Hardware Specs"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Display: 160x160 pixels, 4 customizable colors, updated at 60 Hz."),(0,o.kt)("li",{parentName:"ul"},"Memory: 64 KB linear RAM, memory-mapped I/O, save states."),(0,o.kt)("li",{parentName:"ul"},"Cartridge Size Limit: 64 KB."),(0,o.kt)("li",{parentName:"ul"},"Input: Keyboard, mouse, touchscreen, up to 4 gamepads."),(0,o.kt)("li",{parentName:"ul"},"Audio: 2 pulse wave channels, 1 triangle wave channel, 1 noise channel."),(0,o.kt)("li",{parentName:"ul"},"Disk Storage: 1024 bytes.")),(0,o.kt)("p",null,"Don't worry if you don't understand what some of this means yet! The rest of this documentation will\ngo into depth on how the system works."),(0,o.kt)("p",null,"Let's get started by ",(0,o.kt)("a",{parentName:"p",href:"/docs/getting-started/setup"},"setting up WASM-4"),"."))}m.isMDXComponent=!0}}]);